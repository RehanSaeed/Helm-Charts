resourceQuota:
  # Compute
  compute:
    cpu: 10
    memory: "20Gi"
  # Storage
  storage:
    maximumSize: "0Gi"
    persistentvolumeclaims: 0
  # Object Counts
  objectCounts:
    configmaps: 10
    pods: 10
    replicationcontrollers: 20 # Double the pod count to allow updates
    secrets: 10
    services:
      maximumCount: 5
      loadbalancers: 5
      nodeports: 5

environment: "Production"

home:
  replicaCount: 3
  image:
    repository: nginx
    tag: stable
  service:
    type: LoadBalancer
    port: 80
  priorityClassName: "high"
  rollingUpdate:
    maxSurge: "25%" # Maximum number of pods to create during an update (Default=25%)
    maxUnavailable: "25%" # Maximum number of pods to take down during a rolling update (Default=25%)
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  securityContext:
    readOnlyRootFilesystem: false
    runAsUser: null
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podDisruptionBudget:
    maxUnavailable: "1%"
  autoscaling:
    maxReplicas: 10
    minReplicas: 1
    targetCPUUtilizationPercentage: 50

kured:
  nameOverride: ""
  fullnameOverride: ""
  image.pullPolicy: Always
  resources:
    limits:
      cpu: 10m
      memory: 50Mi
    requests:
      cpu: 10m
      memory: 50Mi

# redis-ha:
#   nameOverride: "redis"
#   replicas: 2
#   auth: false
#   # redisPassword: '' TODO
#   persistentVolume:
#     enabled: false